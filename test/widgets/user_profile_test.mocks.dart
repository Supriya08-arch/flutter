// Mocks generated by Mockito 5.1.0 from annotations
// in myapp/test/widgets/user_profile_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myapp/http/httpconnectuserprofile.dart' as _i3;
import 'package:myapp/model/user.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

/// A class which mocks [HttpConnectUserProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpConnectUserProfile extends _i1.Mock
    implements _i3.HttpConnectUserProfile {
  MockHttpConnectUserProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseurl =>
      (super.noSuchMethod(Invocation.getter(#baseurl), returnValue: '')
          as String);
  @override
  _i4.Future<_i2.User> getUserProfile() =>
      (super.noSuchMethod(Invocation.method(#getUserProfile, []),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<bool> updateUserProfile(_i2.User? updateduser) =>
      (super.noSuchMethod(Invocation.method(#updateUserProfile, [updateduser]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
